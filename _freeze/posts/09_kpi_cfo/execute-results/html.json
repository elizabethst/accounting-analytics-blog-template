{
  "hash": "9db0644a4f5d25449ee40f84e870ff53",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"9: KPI Dashboard for CFO\"\ndate: today\nexecute: \n  eval: false\n  message: false\n  warning: false\n---\n\n## Executive Summary\n\n*Write a 2-3 sentence summary of the financial performance and key insights from your KPI dashboard. Complete this section after finishing the assignment.*\n\n---\n\n## Introduction\n\nAs an accounting professional creating executive dashboards, you need to build visualizations that communicate financial performance effectively to CFOs. KPI dashboards help executives:\n\n- Monitor financial health at a glance\n- Track performance against targets\n- Identify trends and potential issues\n- Make data-driven strategic decisions\n\nIn this blog post, you will:\n\n- Create professional KPI tables using gt\n- Build interactive financial visualizations\n- Analyze liquidity and profitability metrics\n- Design a comprehensive CFO dashboard\n\n## Setup and Load Libraries\n\n### Required Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load packages we need - matching the slides\nlibrary(tidyverse)     # For data manipulation\nlibrary(scales)        # For formatting numbers\nlibrary(gt)            # For creating elegant tables\nlibrary(plotly)        # For interactive plots\n\n# Set theme for consistent styling\ntheme_set(theme_minimal(base_size = 12))\n\n# Create custom color palette for financial data\nfin_colors <- c(\n  positive = \"#2E7D32\",  # Green for positive values\n  negative = \"#C62828\",  # Red for negative values\n  neutral = \"#1976D2\",   # Blue for neutral values\n  posback = \"#C8E6C9\",   # Light green for background\n  negback = \"#FFCDD2\"    # Light red for background\n)\n```\n:::\n\n\n### Load and Explore the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the financial data\nfinancial_data <- read_rds(\"data/09-assignment-financial_data.rds\")\n\n# Display structure of the data\nglimpse(financial_data)\n\n# View summary statistics\nfinancial_data |>\n  summary()\n```\n:::\n\n\n## Initial Data Exploration\n\n### Financial Performance Overview\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate summary statistics for key metrics\nperformance_summary <- financial_data |>\n  summarize(\n    months_of_data = n(),\n    avg_revenue = mean(_____),\n    revenue_growth = (last(_____) - first(_____)) / first(_____),\n    avg_gross_margin = mean(_____),\n    avg_operating_margin = mean(_____),\n    ending_cash = last(_____)\n  )\n\n# Display summary\nperformance_summary |>\n  gt() |>\n  fmt_currency(columns = c(_____, _____), decimals = 0) |>\n  fmt_percent(columns = c(_____, _____, _____), decimals = 1) |>\n  fmt_number(columns = months_of_data, decimals = 0)\n```\n:::\n\n\n### Monthly Trends Overview\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a trend summary for the last 6 months\nrecent_trends <- financial_data |>\n  slice_tail(n = 6) |>\n  select(date, revenue, operating_margin, cash_balance) |>\n  gt() |>\n  fmt_date(columns = date, date_style = \"yMMM\") |>\n  fmt_currency(columns = c(_____, _____), decimals = 0) |>\n  fmt_percent(columns = _____, decimals = 1) |>\n  tab_header(\n    title = \"Recent Performance Trends\",\n    subtitle = \"Last 6 Months\"\n  )\n\nrecent_trends\n```\n:::\n\n\n## Key Performance Indicators Table\n\n### Current vs Prior Month Comparison\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get current and prior month data\ncurrent_month <- financial_data |>\n  filter(date == _____(date))\n\nprior_month <- financial_data |>\n  filter(date == max(date) - _____(1))\n\n# Create KPI comparison with more metrics\nkpi_comparison <- tribble(\n  ~Metric, ~Current, ~Prior, ~Change, ~Status,\n  \"Revenue\", current_month$_____, prior_month$_____, \n    (current_month$_____ - prior_month$_____) / prior_month$_____,\n    ifelse(current_month$_____ > prior_month$_____, \"positive\", \"negative\"),\n  \n  \"Gross Margin\", current_month$_____, prior_month$_____,\n    current_month$_____ - prior_month$_____,\n    ifelse(current_month$_____ > prior_month$_____, \"positive\", \"negative\"),\n  \n  \"Operating Margin\", current_month$_____, prior_month$_____,\n    current_month$_____ - prior_month$_____,\n    ifelse(current_month$_____ > prior_month$_____, \"positive\", \"negative\"),\n  \n  \"Cash Balance\", current_month$_____, prior_month$_____,\n    (current_month$_____ - prior_month$_____) / prior_month$_____,\n    ifelse(current_month$_____ > prior_month$_____, \"positive\", \"negative\"),\n    \n  \"Current Ratio\", current_month$_____, prior_month$_____,\n    current_month$_____ - prior_month$_____,\n    ifelse(current_month$_____ > prior_month$_____, \"positive\", \"negative\")\n)\n\n# Format as professional table with gt\nkpi_comparison |>\n  gt() |>\n  # Format different types of metrics appropriately\n  fmt_currency(\n    columns = c(Current, Prior),\n    rows = Metric %in% c(\"Revenue\", \"Cash Balance\"),\n    decimals = 0\n  ) |>\n  fmt_percent(\n    columns = c(Current, Prior),\n    rows = Metric %in% c(\"Gross Margin\", \"Operating Margin\"),\n    decimals = 1\n  ) |>\n  fmt_number(\n    columns = c(Current, Prior),\n    rows = Metric == \"Current Ratio\",\n    decimals = 2\n  ) |>\n  fmt_percent(\n    columns = Change,\n    rows = Metric %in% c(\"Revenue\", \"Cash Balance\"),\n    decimals = 1\n  ) |>\n  fmt_number(\n    columns = Change,\n    rows = Metric %in% c(\"Gross Margin\", \"Operating Margin\", \"Current Ratio\"),\n    decimals = 2\n  ) |>\n  cols_hide(columns = Status) |>\n  # Add conditional formatting\n  tab_style(\n    style = cell_text(color = fin_colors[\"_____\"], weight = \"bold\"),\n    locations = cells_body(\n      columns = Change,\n      rows = Status == \"_____\"\n    )\n  ) |>\n  tab_style(\n    style = cell_text(color = fin_colors[\"_____\"], weight = \"bold\"),\n    locations = cells_body(\n      columns = Change,\n      rows = Status == \"_____\"\n    )\n  ) |>\n  # Add header\n  tab_header(\n    title = \"Monthly KPI Summary\",\n    subtitle = \"Key Financial Metrics - Month over Month\"\n  )\n```\n:::\n\n\n## Liquidity Analysis\n\n### Calculate and Display Liquidity Ratios\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate liquidity metrics for the latest month\nliquidity_metrics <- financial_data |>\n  filter(date == max(date)) |>\n  select(current_ratio, quick_ratio, cash_ratio) |>\n  pivot_longer(everything(), names_to = \"ratio_type\", values_to = \"Value\") |>\n  mutate(\n    Ratio = case_when(\n      ratio_type == \"current_ratio\" ~ \"Current Ratio\",\n      ratio_type == \"quick_ratio\" ~ \"Quick Ratio\", \n      ratio_type == \"cash_ratio\" ~ \"Cash Ratio\"\n    ),\n    Benchmark = c(2.0, 1.0, 0.5),  # Industry benchmarks\n    Status = ifelse(Value >= Benchmark, \"_____\", \"_____\"),\n    Difference = Value - Benchmark\n  )\n\n# Create enhanced liquidity table\nliquidity_metrics |>\n  select(Ratio, Value, Benchmark, Difference, Status) |>\n  gt() |>\n  fmt_number(\n    columns = c(Value, Benchmark, Difference),\n    decimals = 2\n  ) |>\n  # Add conditional formatting for Status\n  tab_style(\n    style = cell_fill(color = fin_colors[\"_____\"]),\n    locations = cells_body(\n      columns = Status,\n      rows = Status == \"Healthy\"\n    )\n  ) |>\n  tab_style(\n    style = cell_fill(color = fin_colors[\"_____\"]),\n    locations = cells_body(\n      columns = Status,\n      rows = Status == \"Warning\"\n    )\n  ) |>\n  # Color code the difference\n  tab_style(\n    style = cell_text(color = fin_colors[\"positive\"]),\n    locations = cells_body(\n      columns = Difference,\n      rows = Difference > 0\n    )\n  ) |>\n  tab_style(\n    style = cell_text(color = fin_colors[\"negative\"]),\n    locations = cells_body(\n      columns = Difference,\n      rows = Difference < 0\n    )\n  ) |>\n  cols_label(\n    Ratio = \"Liquidity Metric\",\n    Value = \"Current\",\n    Benchmark = \"Target\",\n    Difference = \"+/-\",\n    Status = \"Status\"\n  ) |>\n  tab_header(\n    title = \"Liquidity Analysis\",\n    subtitle = \"Current Month vs Industry Benchmarks\"\n  )\n```\n:::\n\n\n## Financial Visualizations\n\n### Revenue and Profitability Trends\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create revenue trend plot with profit overlay\nrevenue_profit_plot <- financial_data |>\n  ggplot(aes(x = date)) +\n  geom_col(aes(y = _____), fill = fin_colors[\"neutral\"], alpha = 0.7) + # revenue\n  geom_line(aes(y = _____), color = fin_colors[\"positive\"], size = 2) + # operating_profit\n  geom_point(aes(y = _____), color = fin_colors[\"positive\"], size = 3) + # operating_profit\n  scale_y_continuous(\n    labels = dollar_format(scale = 1e-6, suffix = \"M\")) +\n  scale_x_date(date_labels = \"%b %Y\") +\n  labs(\n    title = \"Revenue and Operating Profit Trends\",\n    subtitle = \"Monthly Performance Over Time\",\n    x = NULL,\n    y = NULL\n  ) \n\n# Convert to interactive\nggplotly(revenue_profit_plot) |>\nlayout(\n    hovermode = \"x unified\"\n  )\n```\n:::\n\n\n### Margin Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create margin comparison over time\nmargin_data <- financial_data |>\n  select(date, gross_margin, operating_margin) |>\n  _____(cols = -date, names_to = \"Metric\", values_to = \"Value\") |>\n  mutate(\n    Metric = case_when(\n      Metric == \"gross_margin\" ~ \"Gross Margin\",\n      Metric == \"operating_margin\" ~ \"Operating Margin\"\n    )\n  )\n\n# Create the plot\nmargin_plot <- margin_data |>\n  ggplot(aes(x = date, y = Value, color = Metric)) +\n  geom_line(linewidth = 1.2) +\n  geom_point(size = 2.5) +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  _____(labels = percent_format()) +\n  scale_x_date(date_labels = \"%b %Y\") +\n  scale_color_manual(values = c(\n    \"Gross Margin\" = fin_colors[[\"positive\"]],\n    \"Operating Margin\" = fin_colors[[\"neutral\"]]\n  )) +\n  _____(\n    title = \"Profitability Margins Trend\",\n    subtitle = \"Gross vs Operating Margins\",\n    x = NULL,\n    y = NULL,\n    color = NULL\n  ) \n\n# Make interactive\nggplotly(_____) |>\n  layout(\n    hovermode = \"x unified\"\n  )\n```\n:::\n\n\n## Working Capital Analysis\n\n### Days Sales Outstanding and Days Payable Outstanding\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create working capital efficiency metrics plot\nwc_metrics <- financial_data |>\n  select(date, days_sales_outstanding, days_payable_outstanding) |>\n  pivot_longer(cols = -date, names_to = \"Metric\", values_to = \"Days\") |>\n  _____(\n    Metric = case_when(\n      Metric == \"days_sales_outstanding\" ~ \"Days Sales Outstanding\",\n      Metric == \"days_payable_outstanding\" ~ \"Days Payable Outstanding\"\n    )\n  )\n\n# Create the plot\nwc_plot <- wc_metrics |>\n  _____(aes(x = date, y = Days, fill = Metric)) +\n  geom_col(position = \"dodge\") +\n  scale_x_date(date_labels = \"%b %Y\") +\n  scale_fill_manual(values = c(\n    \"Days Sales Outstanding\" = fin_colors[[\"negative\"]],\n    \"Days Payable Outstanding\" = fin_colors[[\"positive\"]]\n  )) +\n  labs(\n    title = \"Working Capital Efficiency\",\n    x = NULL,\n    y = \"Days\",\n    fill = NULL\n  ) \n\n# Convert to interactive\nggplotly(wc_plot) |>\n  layout(hovermode = \"x unified\")\n```\n:::\n\n\n### Cash Balance and Cash Flow Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate monthly cash flow (simplified)\ncash_flow_data <- financial_data |>\n  mutate(\n    monthly_cash_change = cash_balance - lag(cash_balance),\n    cash_from_operations = operating_profit + \n      (lag(accounts_receivable) - accounts_receivable) - \n      (lag(accounts_payable) - accounts_payable)\n  ) |>\n  filter(!is.na(monthly_cash_change))\n\n# Create cash balance trend with cash flow\ncash_plot <- cash_flow_data |>\n  ggplot(aes(x = date)) +\n  geom_area(aes(y = _____), fill = fin_colors[\"neutral\"], alpha = 0.3) +\n  geom_line(aes(y = _____), color = fin_colors[\"neutral\"], size = 1.5) +\n  geom_col(aes(y = _____), \n           fill = ifelse(cash_flow_data$_____ > 0, \n                        fin_colors[\"positive\"], \n                        fin_colors[\"negative\"]),\n           alpha = 0.7) +\n  scale_y_continuous(labels = dollar_format(scale = 1e-3, suffix = \"K\")) +\n  scale_x_date(date_labels = \"%b %Y\") +\n  labs(\n    title = \"Cash Position and Monthly Cash Flow\",\n    subtitle = \"Balance (Line) and Monthly Change (Bars)\",\n    x = NULL,\n    y = NULL\n  )\n\n# Convert to interactive\nggplotly(cash_plot) |>\n  layout(hovermode = \"x unified\")\n```\n:::\n\n\n## Executive Summary Dashboard\n\n### Comprehensive Performance Summary\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create executive summary for last 6 months\nexec_summary <- financial_data |>\n  slice_tail(n = 6) |>\n  arrange(date) |>\n  mutate(\n    month_name = month(date, label = TRUE, abbr = FALSE)\n  )\n\n\n# Create comprehensive summary table\nexec_summary |>\n  select(month_name, revenue, gross_margin, operating_margin, \n         cash_balance, current_ratio, revenue_growth_rate) |>\n  gt() |>\n  # Format monetary columns\n  fmt_currency(\n    columns = c(_____, _____),\n    decimals = 0\n  ) |>\n  # Format percentage columns\n  fmt_percent(\n    columns = c(_____, _____, _____),\n    decimals = 1\n  ) |>\n  # Format ratio\n  fmt_number(\n    columns = _____,\n    decimals = 2\n  ) |>\n  # Add column labels\n  cols_label(\n    month_name = \"Month\",\n    revenue = \"Revenue\",\n    gross_margin = \"Gross Margin\",\n    operating_margin = \"Op Margin\",\n    cash_balance = \"Cash\",\n    current_ratio = \"Current Ratio\",\n    revenue_growth_rate = \"YoY Growth\"\n  ) |>\n  # Add header\n  tab_header(\n    title = \"Executive Performance Summary (2026)\",\n    subtitle = \"Six-Month Financial Dashboard\"\n  ) |>\n  # Highlight most recent month\n  tab_style(\n    style = list(\n      cell_fill(color = \"#E3F2FD\"),\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(rows = _____)\n  ) \n```\n:::\n\n\n### Key Metrics Scorecard\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a metrics scorecard for the latest month\nlatest_metrics <- financial_data |>\n  filter(date == max(date))\n\n# Define targets and create scorecard\nscorecard <- tribble(\n  ~Category, ~Metric, ~Value, ~Target, ~Performance,\n  \"Growth\", \"Monthly Revenue\", latest_metrics$revenue, 850000, \n    ifelse(latest_metrics$revenue >= 850000, \"Above Target\", \"Below Target\"),\n  \n  \"Profitability\", \"Operating Margin\", latest_metrics$operating_margin, 0.15,\n    ifelse(latest_metrics$operating_margin >= 0.15, \"Above Target\", \"Below Target\"),\n  \n  \"Liquidity\", \"Current Ratio\", latest_metrics$current_ratio, 2.0,\n    ifelse(latest_metrics$current_ratio >= 2.0, \"Above Target\", \"Below Target\"),\n  \n  \"Efficiency\", \"Days Sales Outstanding\", latest_metrics$days_sales_outstanding, 50,\n    ifelse(latest_metrics$days_sales_outstanding <= 50, \"Above Target\", \"Below Target\"),\n  \n  \"Cash Management\", \"Cash Balance\", latest_metrics$cash_balance, 1000000,\n    ifelse(latest_metrics$cash_balance >= 1000000, \"Above Target\", \"Below Target\")\n)\n\n# Create scorecard table\nscorecard |>\n  gt() |>\n  # Format values based on metric type\n  fmt_currency(\n    columns = Value,\n    rows = Metric %in% c(\"Monthly Revenue\", \"Cash Balance\"),\n    decimals = 0\n  ) |>\n  fmt_percent(\n    columns = Value,\n    rows = Metric == \"Operating Margin\",\n    decimals = 1\n  ) |>\n  fmt_number(\n    columns = Value,\n    rows = Metric %in% c(\"Current Ratio\", \"Days Sales Outstanding\"),\n    decimals = 1\n  ) |>\n  # Format targets similarly\n  fmt_currency(\n    columns = Target,\n    rows = Metric %in% c(\"Monthly Revenue\", \"Cash Balance\"),\n    decimals = 0\n  ) |>\n  fmt_percent(\n    columns = Target,\n    rows = Metric == \"Operating Margin\",\n    decimals = 1\n  ) |>\n  fmt_number(\n    columns = Target,\n    rows = Metric %in% c(\"Current Ratio\", \"Days Sales Outstanding\"),\n    decimals = 1\n  ) |>\n  # Apply conditional formatting\n  tab_style(\n    style = list(\n      cell_fill(color = fin_colors[\"posback\"]),\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = Performance,\n      rows = Performance == \"Above Target\"\n    )\n  ) |>\n  tab_style(\n    style = list(\n      cell_fill(color = fin_colors[\"negback\"]),\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = Performance,\n      rows = Performance == \"Below Target\"\n    )\n  ) |>\n  tab_header(\n    title = \"Performance Scorecard\",\n    subtitle = \"Current Month vs Targets\"\n  )\n```\n:::\n\n\n## Key Insights and Recommendations\n\nBased on your dashboard analysis, complete these insights:\n\n1. **Revenue Performance**: Revenue has grown from $_____ to $_____ over the 24-month period, representing _____% growth.\n\n2. **Profitability Trends**: \n   - Gross margin has averaged _____% and is currently at _____%\n   - Operating margin has improved from _____% to _____%, showing _____\n\n3. **Liquidity Position**:\n   - Current ratio of _____ is above/below industry benchmark of 2.0\n   - Cash position has grown/declined from $_____ to $_____\n\n4. **Working Capital Management**:\n   - Days Sales Outstanding averages _____ days\n   - Cash conversion cycle is _____ days (DSO - DPO)\n\n5. **Recommendations for CFO**:\n   - Focus area 1: _____\n   - Focus area 2: _____\n   - Key metric to monitor: _____",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}