{
  "hash": "29147f5a3212aa6dcbd047e7bcb72267",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"4: Data Visualization for Accounting\"\ndate: today\nexecute: \n  eval: false #set to true\n  message: false\n  warning: false\n---\n\n## Executive Summary\n\n*Write a 2-3 sentence summary of your visualizations and key insights here after completing the assignment.*\n\n---\n\n## Introduction\n\nAs an accounting professional, you need to communicate complex financial information clearly. Effective data visualization helps stakeholders understand:\n\n- Financial performance trends\n- Budget variances and anomalies\n- Departmental spending patterns\n- Revenue growth across customer segments\n\nIn this blog post, you will:\n\n- Create professional bar charts for categorical comparisons\n- Build line charts to show financial trends\n- Design dashboard layouts for comprehensive reporting\n- Apply best practices for ethical data visualization\n\n## Setup and Load Libraries\n\n### Required Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(tidyverse)  # For ggplot2 and data manipulation\nlibrary(scales)     # For formatting currency and percentages\nlibrary(patchwork)  # For combining multiple plots\n```\n:::\n\n\n### Creating Sample Financial Data\n\nLet's create sample data representing a company's financial performance:\n\n**Monthly Financial Performance**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Monthly financial data for 2027\nmonthly_financials <- tribble(\n  ~month, ~revenue, ~expenses, ~net_income, ~quarter,\n  \"2027-01-01\", 125000, 95000, 30000, \"Q1\",\n  \"2027-02-01\", 135000, 98000, 37000, \"Q1\",\n  \"2027-03-01\", 142000, 102000, 40000, \"Q1\",\n  \"2027-04-01\", 155000, 110000, 45000, \"Q2\",\n  \"2027-05-01\", 148000, 108000, 40000, \"Q2\",\n  \"2027-06-01\", 162000, 115000, 47000, \"Q2\",\n  \"2027-07-01\", 158000, 112000, 46000, \"Q3\",\n  \"2027-08-01\", 171000, 120000, 51000, \"Q3\",\n  \"2027-09-01\", 166000, 118000, 48000, \"Q3\",\n  \"2027-10-01\", 180000, 125000, 55000, \"Q4\",\n  \"2027-11-01\", 195000, 135000, 60000, \"Q4\",\n  \"2027-12-01\", 210000, 145000, 65000, \"Q4\"\n) |>\n  mutate(month = as.Date(month))\n\n# View the data\nmonthly_financials\n```\n:::\n\n\n**Department Expense Data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Department expense breakdown\ndept_expenses <- tribble(\n  ~department, ~expense_category, ~amount,\n  \"Sales\", \"Salaries\", 225236,\n  \"Sales\", \"Travel\", 75308,\n  \"Sales\", \"Supplies\", 34419,\n  \"Marketing\", \"Salaries\", 179800,\n  \"Marketing\", \"Advertising\", 134369,\n  \"Marketing\", \"Supplies\", 29876,\n  \"Operations\", \"Salaries\", 270664,\n  \"Operations\", \"Equipment\", 88937,\n  \"Operations\", \"Supplies\", 57135,\n  \"Finance\", \"Salaries\", 202516,\n  \"Finance\", \"Software\", 57135,\n  \"Finance\", \"Supplies\", 27605\n)\n\n# View the data\ndept_expenses\n```\n:::\n\n\n### Setting Professional Defaults\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set a clean theme for all plots\ntheme_set(theme_minimal())\n\n# Prevent scientific notation in output\noptions(scipen = 9999)\n```\n:::\n\n\n## Creating Your First Visualization\n\n### Bar Chart: Department Total Expenses\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate total expenses by department\ndept_totals <- dept_expenses |>\n  group_by(_____) |>  # Group by department\n  summarize(total_expenses = _____) |>  # Sum the amounts\n  arrange(desc(total_expenses))\n\n# Display dept_totals\ndept_totals\n\n# Create a horizontal bar chart\nggplot(dept_totals, aes(x = _____, y = reorder(department, _____))) +\n  geom_col(fill = \"dark blue\") +\n  scale_x_continuous(labels = _____) +  # Format as currency\n  labs(\n    title = \"Total Expenses by Department\",\n    subtitle = \"Fiscal Year 2027\",\n    x = NULL,\n    y = NULL,\n    caption = \"Source: General Ledger\"\n  )\n```\n:::\n\n\n### Line Chart: Revenue Trend Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a line chart showing monthly revenue\nmonthly_financials |>\n  ggplot(aes(x = _____, y = _____)) +  # Map month to x, revenue to y\n  geom_line(color = \"dark green\", size = 1.2) +\n  geom_point(color = \"dark green\", size = 2.5) +\n  scale_x_date(\n    labels = label_date_short(), \n    breaks = breaks_width(\"1 months\")) +\n  scale_y_continuous(labels = _____) +  # Format as currency\n  labs(\n    title = \"_____\",  # Add appropriate title\n    subtitle = \"January - December 2027\",\n    x = NULL,\n    y = NULL,\n    caption = \"Source: Financial Reporting System\"\n  )\n```\n:::\n\n\n## Multi-Series Line Chart\n\n### Comparing Revenue vs Expenses\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform data for multi-line plotting\nfinancial_trends <- monthly_financials |>\n  select(month, revenue, expenses) |>\n  pivot_longer(\n    cols = c(_____, _____),  # Select revenue and expenses columns\n    names_to = \"metric\",\n    values_to = \"amount\"\n  )\n\n\n# Display financial_trends\n_____\n\n\n# Create multi-line chart\nggplot(financial_trends, aes(x = month, y = amount, color = _____)) +\n  geom_line(size = 1.2) +\n  geom_point(size = 2) +\n  scale_x_date(\n    labels = label_date_short(),\n    breaks = breaks_width(\"3 months\")) +\n  scale_y_continuous(labels = dollar_format()) +\n  scale_color_manual(\n    values = c(\"revenue\" = \"_____\", \"expenses\" = \"_____\"),  # Choose appropriate colors\n    labels = c(\"revenue\" = \"Revenue\", \"expenses\" = \"Expenses\"),\n    breaks = c(\"revenue\", \"expenses\") # Set order of legend items\n  ) +\n  labs(\n    title = \"Revenue vs Expenses Trend\",\n    subtitle = \"2027 Financial Performance\",\n    x = NULL,\n    y = NULL,\n    color = NULL\n  ) +\n  theme(legend.position = \"bottom\")\n```\n:::\n\n\n## Department Expense Breakdown\n\n### Stacked Bar Chart by Category\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create stacked bar chart showing expense categories\ndept_expenses |>\n  ggplot(aes(x = department, y = amount, fill = _____)) +  # Fill by expense_category\n  geom_col(position = \"_____\") +  # Use \"stack\" position\n  scale_y_continuous(labels = dollar_format()) +\n  scale_fill_brewer(palette = \"Blues\") +\n  labs(\n    title = \"Department Expenses by Category\",\n    subtitle = \"Fiscal Year 2027\",\n    x = NULL,\n    y = NULL,\n    fill = NULL,\n    caption = \"Source: General Ledger\"\n  ) +\n  theme(legend.position = \"bottom\")\n```\n:::\n\n\n## Creating a Financial Dashboard\n\n### Panel 1: Net Income Trend\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create net income visualization\np1 <- monthly_financials |>\n  ggplot(aes(x = month, y = _____)) +  # Plot net_income\n  geom_col(fill = ifelse(monthly_financials$net_income > 0, \"seagreen\", \"tomato\")) +\n  scale_x_date(labels = label_date_short()) +\n  scale_y_continuous(labels = dollar_format()) +\n  labs(\n    title = \"Monthly Net Income\",\n    x = NULL,\n    y = NULL\n  )\n\n# Display p1\n_____\n```\n:::\n\n\n### Panel 2: Quarterly Performance\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarize by quarter\nquarterly_summary <- monthly_financials |>\n  group_by(_____) |>  # Group by quarter\n  summarize(\n    total_revenue = sum(_____),\n    total_expenses = sum(_____),\n    total_net_income = sum(_____)\n  )\n\n# Display quarterly_summary\n_____\n\n# Create quarterly comparison\np2 <- quarterly_summary |>\n  ggplot(aes(x = _____)) +\n  geom_col(aes(y = total_revenue), fill = \"seagreen\") +\n  geom_col(aes(y = -total_expenses), fill = \"tomato\") +\n  scale_y_continuous(\n    labels = function(x) dollar_format()(abs(x))\n  ) +\n  labs(\n    title = \"Quarterly Revenue vs Expenses\",\n    subtitle = \"Revenue (green) above, Expenses (red) below\",\n    x = NULL,\n    y = NULL\n  )\n\n\n# Display p2\np2\n```\n:::\n\n\n### Combine Dashboard Panels\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combine panels using patchwork\ndashboard <- p1 / p2\n\n# Display dashboard\ndashboard +\n  plot_annotation(\n    title = \"Financial Performance Dashboard\",\n    subtitle = \"Fiscal Year 2027\",\n    caption = \"Source: Financial Reporting System\"\n  )\n```\n:::\n\n\n## Advanced Visualization: Variance Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create budget vs actual data\nbudget_data <- tribble(\n  ~department, ~budget, ~actual,\n  \"Sales\", 350000, 334963,\n  \"Marketing\", 320000, 344045,\n  \"Operations\", 420000, 416736,\n  \"Finance\", 280000, 287256\n) |>\n  mutate(\n    variance_amount = _____ - _____,  # Calculate variance\n    variance_pct = (variance_amount / budget) * 100,\n    favorable = variance_amount < 0  # For expenses, under budget is favorable\n  )\n\n\n# Display budget_data\n_____\n\n\n# Create variance visualization\nbudget_data |>\n  ggplot(aes(x = variance_pct, y = reorder(department, variance_pct))) +\n  geom_col(aes(fill = favorable)) +\n  scale_fill_manual(\n    values = c(\"TRUE\" = \"_____\", \"FALSE\" = \"_____\"),  # Green for favorable, red for unfavorable\n    labels = c(\"TRUE\" = \"Favorable\", \"FALSE\" = \"Unfavorable\")\n  ) +\n  scale_x_continuous(labels = percent_format(scale = 1)) +\n  labs(\n    title = \"Budget Variance by Department\",\n    subtitle = \"Percentage Over/Under Budget\",\n    x = NULL,\n    y = NULL,\n    fill = NULL\n  ) +\n  theme(legend.position = \"bottom\")\n```\n:::\n\n\n## Key Insights and Best Practices\n\n### Data Visualization Ethics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Example of ethical vs misleading visualization\n# Create the same data with different y-axis scales\n\n# Misleading (truncated y-axis)\nmisleading <- monthly_financials |>\n  ggplot(aes(x = month, y = revenue)) +\n  geom_line(color = \"dark green\", size = 1.2) +\n  scale_y_continuous(\n    limits = c(120000, 220000),  # Truncated axis\n    labels = dollar_format()\n  ) +\n  labs(title = \"MASSIVE Revenue Growth!\")\n\n# Ethical (starts at zero)\nethical <- monthly_financials |>\n  ggplot(aes(x = month, y = revenue)) +\n  geom_line(color = \"dark green\", size = 1.2) +\n  scale_y_continuous(\n    limits = c(0, NA),  # Start at zero\n    labels = dollar_format()\n  ) +\n  labs(title = \"Monthly Revenue Growth\")\n\n# Compare side by side\nmisleading | ethical\n```\n:::\n\n\n### Summary Metrics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate key performance metrics\nperformance_summary <- monthly_financials |>\n  summarize(\n    total_revenue = sum(revenue),\n    total_expenses = sum(expenses),\n    total_net_income = sum(net_income),\n    profit_margin = (total_net_income / total_revenue),\n    revenue_growth = ((last(revenue) - first(revenue)) / first(revenue)) \n  )\n\n\n# Display performance_summary\nperformance_summary\n\n\n# Format the summary\nperformance_summary |>\n  mutate(\n    total_revenue = dollar(total_revenue),\n    total_expenses = dollar(total_expenses),\n    total_net_income = dollar(total_net_income),\n    profit_margin = percent(profit_margin),\n    revenue_growth = percent(revenue_growth)\n  )\n```\n:::\n\n\n## Key Findings\n\nBased on the visualizations above, complete these insights:\n\n- **Revenue Trend**: Revenue (increased/decreased) by _____% from January to December.\n- **Highest Spending Department**: _____ had the highest total expenses at $_____.\n- **Profit Margin**: The company achieved a _____% profit margin for the year.\n- **Best Performing Quarter**: Q_____ showed the highest net income at $_____.\n- **Budget Performance**: The _____ and _____ departments were under budget (favorable variance).",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}