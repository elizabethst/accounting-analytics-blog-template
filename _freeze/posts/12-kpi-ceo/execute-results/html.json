{
<<<<<<< HEAD
  "hash": "ec9613a83074beb7ca67f3059a4ae692",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"12: CEO Strategic Dashboard\"\ndate: today\nformat: dashboard\nexecute:\n  eval: false # change to true\n  warning: false\n  message: false\n---\n\n\n\n# Executive Summary\n\n## Key Metrics\n\n\n::: {.cell}\n\n:::\n\n\n## Performance Snapshot\n\n\n::: {.cell}\n\n:::\n\n\n# Financial Performance \n\n## Revenue Analysis\n\n\n\n::: {.cell}\n\n:::\n\n\n## Profitability Metrics\n\n\n::: {.cell}\n\n:::\n\n\n## Cash Flow\n\n\n::: {.cell}\n\n:::\n\n\n# Market Position\n\n## Market Share\n\n\n::: {.cell}\n\n:::\n\n\n## Competitive Analysis\n\n\n::: {.cell}\n\n:::\n\n\n# Customer Metrics\n\n## Customer Health\n\n\n::: {.cell}\n\n:::\n\n\n## Segment Analysis\n\n\n::: {.cell}\n\n:::\n\n\n# Operational Excellence\n\n## Efficiency Metrics\n\n\n::: {.cell}\n\n:::\n\n\n## Quality Indicators\n\n\n::: {.cell}\n\n:::\n\n\n# Innovation & Growth \n\n## R&D Pipeline\n\n\n::: {.cell}\n\n:::\n\n\n## Digital Transformation\n\n\n::: {.cell}\n\n:::\n\n\n# Strategic Forecast \n\n## 5-Year Outlook\n\n\n::: {.cell}\n\n:::\n\n\n## Scenario Analysis\n\n\n::: {.cell}\n\n:::\n\n\n# Insights & Actions\n\n## Key Strategic Findings\n\nBased on your dashboard analysis, identify the following:\n\n**Financial Performance**:\n\n- Revenue growth rate: _____% \n- EBITDA margin vs. target: _____ bps\n- Free cash flow growth: _____%\n\n**Market Position**:\n\n- Market share change: _____ pp\n- Competitive advantage in: _____\n- Key competitor threats: _____\n\n**Customer Health**:\n\n- Net Promoter Score: _____\n- Customer retention rate: _____%\n- Lifetime value to CAC ratio: _____:1\n\n**Operational Excellence**:\n\n- Revenue per employee: $_____\n- Quality metrics trending: ↑/↓/→\n- Digital transformation progress: _____%\n\n## Strategic Priorities\n\nComplete these action items based on your analysis:\n\n**Immediate Actions** (This Quarter):\n\n- Address margin gap by: _____\n- Launch initiative to improve: _____\n- Accelerate progress on: _____\n\n**Short-term Focus** (Next 6 Months):\n\n- Capture market share through: _____\n- Improve customer NPS by implementing: _____\n- Complete digital transformation of: _____\n\n**Long-term Strategy** (Next Year):\n\n- Achieve revenue target of $_____ by: _____\n- Expand into new markets: _____\n- Build competitive moat through: _____\n\n## Risk Mitigation\n\n**Identified Risks**:\n\n- Primary competitive threat: _____\n- Operational bottleneck: _____\n- Customer satisfaction gap: _____\n\n**Mitigation Strategies**:\n\n- Invest $_____ in: _____\n- Hire _____ resources for: _____\n- Partner with _____ to address: _____",
=======
  "hash": "013d14a2a61f2d4af887540087405569",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"12: CEO Strategic Dashboard\"\ndate: today\nexecute:\n  eval: false # change to true\n  warning: false\n  message: false\n---\n\n\n\n# Executive Summary\n\n## Key Metrics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create executive summary metrics\n# This table contains the top 5 KPIs that CEOs track most closely\nexecutive_kpis <- tribble(\n  ~metric, ~current, ~target, ~prior_year, ~status,\n  \"Revenue ($M)\", 850, 825, 780, \"Ahead\",          # Revenue: beating target by $25M\n  \"EBITDA Margin %\", 18.2, 19.0, 17.5, \"Behind\",  # Profitability: 80bps below target\n  \"Market Share %\", 21.0, 22.0, 21.2, \"Behind\",   # Competitive position: above target but classified as behind\n  \"Customer NPS\", 72, 75, 68, \"Behind\",            # Customer loyalty: improving but below target\n  \"Stock Price ($)\", 142.50, 150.00, 118.25, \"Behind\" # Shareholder value: strong growth but below target\n) |>\n  mutate(\n    # Calculate year-over-year changes with different logic for percentages vs. absolute values\n    yoy_change = case_when(\n      str_detect(metric, \"%\") ~ current - prior_year,  # For percentages: use percentage point change\n      TRUE ~ (current - prior_year) / prior_year * 100  # For absolute values: use percent change\n    ),\n    \n    # Calculate variance against target with same logic\n    vs_target = case_when(\n      str_detect(metric, \"%\") ~ current - target,  # Percentage point difference for margins/percentages\n      TRUE ~ (current - target) / target * 100     # Percent difference for revenue/stock price\n    ),\n    \n    # Create user-friendly display formats with appropriate units\n    yoy_change_display = case_when(\n      str_detect(metric, \"%\") ~ paste0(if_else(yoy_change > 0, \"+\", \"\"), \n                                      round(yoy_change, 1), \"pp\"),  # \"pp\" = percentage points\n      TRUE ~ paste0(if_else(yoy_change > 0, \"+\", \"\"), \n                  round(yoy_change, 1), \"%\")                      # Regular percent for growth rates\n    ),\n    \n    # Same formatting logic for target comparison\n    vs_target_display = case_when(\n      str_detect(metric, \"%\") ~ paste0(if_else(vs_target > 0, \"+\", \"\"), \n                                      round(vs_target, 1), \"pp\"),\n      TRUE ~ paste0(if_else(vs_target > 0, \"+\", \"\"),            \n      round(vs_target, 1), \"%\")\n    )\n  )\n\n# Create professional executive summary table using gt package\n_____ |>\n  # Select only the columns needed for display (hide calculation columns)\n  select(metric, current, target, prior_year, yoy_change_display, \n        vs_target_display, status) |>\n  gt() |>\n    # Add professional header with title and subtitle\n  tab_header(\n    title = \"Executive KPI Summary\",\n    subtitle = \"FY 2026 Performance\"\n  ) |>\n  \n  # Format numeric columns to show 1 decimal place for consistency\n  fmt_number(columns = c(current, target, prior_year), decimals = 1) |>\n  \n  # Rename columns to be more user-friendly\n  cols_label(\n    yoy_change_display = \"YoY Change\",    # Year-over-year change\n    vs_target_display = \"vs Target\"       # Variance against target\n  ) |>\n  \n  # Apply conditional formatting: green background for metrics ahead of target\n  tab_style(\n    style = cell_fill(color = company_colors$success),  # Green fill\n    locations = cells_body(\n      columns = status,\n      rows = status == \"Ahead\"\n    )\n  ) |>\n  \n  # Apply conditional formatting: yellow/orange background for metrics behind target\n  tab_style(\n    style = cell_fill(color = company_colors$warning),  # Warning color fill\n    locations = cells_body(\n      columns = status,\n      rows = status == \"Behind\"\n    )\n  )\n```\n:::\n\n\n## Performance Snapshot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create performance gauge visualization\n# This section creates a performance score calculation and horizontal bar chart\n# showing how well each KPI is performing relative to its target\n\n# Calculate performance scores for each executive KPI\nperformance_data <- executive_kpis |>\n  mutate(\n    # Calculate performance as percentage of target achievement\n    # For all metrics, higher current value = better performance\n    performance_score = case_when(\n      metric == \"Revenue ($M)\" ~ current / target * 100,        # Revenue: $850M actual vs $825M target = 103.0%\n      metric == \"EBITDA Margin %\" ~ current / target * 100,     # EBITDA: 18.2% actual vs 19.0% target = 95.8%\n      metric == \"Market Share %\" ~ current / target * 100,      # Market share: 21.0% actual vs 22.0% target = 95.5%\n      metric == \"Customer NPS\" ~ current / target * 100,        # NPS: 72 actual vs 75 target = 96.0%\n      metric == \"Stock Price ($)\" ~ current / target * 100      # Stock: $142.50 actual vs $150.00 target = 95.0%\n    )\n  )\n\n# Create horizontal gauge chart showing performance vs targets\ngauge_plot <- performance_data |>\n  ggplot(aes(x = metric, y = performance_score, fill = performance_score)) +\n  \n  # Add horizontal bars representing achievement percentage for each KPI\n  geom_col() +\n  \n  # Add dashed reference line at 100% (target achievement level)\n  geom_hline(yintercept = 100, linetype = \"dashed\", color = \"black\") +\n  \n  # Apply color gradient based on performance level\n  scale_fill_gradient2(\n    low = company_colors$danger,      # Red for significantly below target (< 95%)\n    mid = company_colors$warning,     # Orange for slightly below target (95-100%)\n    high = company_colors$success,    # Green for above target (> 100%)\n    midpoint = 95                     # Set color transition point at 95% achievement\n  ) +\n  \n  # Format y-axis as percentages (e.g., 95.8 displays as 95.8%)\n  scale_y_continuous(labels = percent_format(scale = 1)) +\n  \n  # Flip coordinates to create horizontal bars (easier to read metric names)\n  coord_flip() +\n  \n  # Set chart title and axis labels\n  labs(\n    title = \"Performance vs. Target\",\n    x = NULL,                        # Remove x-axis label (metric names are self-explanatory)\n    y = \"Achievement %\",             # Y-axis shows percentage of target achieved\n    fill = \"Score\"                   # Legend title for color scale\n  ) +\n  \n  # Hide legend since color coding is intuitive (red=bad, green=good)\n  theme(legend.position = \"none\")\n\n# Convert to interactive plotly chart with hover tooltips showing exact percentages\n_____(gauge_plot)\n```\n:::\n\n\n# Financial Performance \n\n## Revenue Analysis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create revenue data for last 3 years\nrevenue_data <- tribble(\n  ~year, ~quarter, ~revenue, ~growth_rate,\n  \"2024\", \"Q1\", 170, 0.055,\n  \"2024\", \"Q2\", 175, 0.061,\n  \"2024\", \"Q3\", 180, 0.068,\n  \"2024\", \"Q4\", 195, 0.073,\n  \"2025\", \"Q1\", 185, 0.088,\n  \"2025\", \"Q2\", 190, 0.086,\n  \"2025\", \"Q3\", 195, 0.083,\n  \"2025\", \"Q4\", 210, 0.077,\n  \"2026\", \"Q1\", 205, 0.108,\n  \"2026\", \"Q2\", 210, 0.105,\n  \"2026\", \"Q3\", 215, 0.103,\n  \"2026\", \"Q4\", 230, 0.095  \n) |>\n  mutate(\n    period = paste(year, quarter),\n    period_date = yq(period)\n  )\n# Create revenue trend plot\n# Create a dual-axis chart showing quarterly revenue bars and growth rate line\nrevenue_plot <- revenue_data |>\n  _____(aes(x = period_date)) +\n  \n  # Add revenue bars with company primary color and transparency\n  geom_col(aes(y = revenue), fill = company_colors$primary, alpha = 0.7) +\n  \n  # Add growth rate line (scaled by 2000 to fit on same axis as revenue)\n  _____(aes(y = growth_rate * 2000, group = 1), \n            color = company_colors$success, size = 2) +\n  \n  # Add points on the growth rate line for better visibility\n  _____(aes(y = growth_rate * 2000), \n             color = company_colors$success, size = 3) +\n  \n  # Configure dual y-axes: left for revenue ($M), right for growth rate (%)\n  scale_y_continuous(\n    name = \"Revenue ($M)\",                          # Left axis label\n    sec.axis = sec_axis(~./2000, name = \"Growth Rate %\", \n                        labels = percent_format())  # Right axis: divide by 2000, format as %\n  ) +\n  \n  # Set chart title and remove x-axis label\n  _____(\n    title = \"Quarterly Revenue & Growth Rate\",\n    x = NULL\n  )\n\n# Display\nrevenue_plot\n```\n:::\n\n\n## Profitability Metrics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create profitability analysis\n# Build quarterly profit margin data for 2026 showing improvement trends\nprofit_metrics <- tribble(\n  ~metric, ~q1_2026, ~q2_2026, ~q3_2026, ~q4_2026,\n  \"Gross Margin %\", 41.5, 42.0, 42.5, 43.0,      # Gross margin trending up from 41.5% to 43%\n  \"EBITDA Margin %\", 17.5, 17.8, 18.2, 18.5,     # EBITDA margin improving toward target\n  \"Net Margin %\", 11.5, 11.8, 12.1, 12.3         # Net margin showing steady quarterly gains\n) |>\n  # Transform data from wide to long format for plotting\n  pivot_longer(cols = -metric, names_to = \"quarter\", values_to = \"value\") |>\n  # Clean up quarter names for better display (remove \"_2026\" suffix)\n  mutate(quarter = str_replace(quarter, \"_2026\", \" 2026\"))\n\n# Create line chart showing margin trends across quarters\nmargin_plot <- profit_metrics |>\n  ggplot(aes(x = quarter, y = value, color = metric, group = metric)) +\n  \n  # Add trend lines with increased thickness for visibility\n  geom_line(linewidth = 2) +\n  \n  # Add data points to highlight quarterly values\n  _____(size = 4) +\n  \n  # Apply company color scheme to differentiate margin types\n  scale_color_manual(values = c(\n    \"Gross Margin %\" = company_colors$primary,      # Blue for gross margin\n    \"EBITDA Margin %\" = company_colors$success,     # Green for EBITDA margin\n    \"Net Margin %\" = company_colors$info            # Light blue for net margin\n  )) +\n  \n  # Format y-axis as percentages for readability\n  scale_y_continuous(_____ = percent_format(scale = 1)) +\n  \n  # Set chart labels and remove legend title for cleaner look\n  labs(\n    title = \"Profitability Trends\",\n    x = NULL,                    # Remove x-axis label (quarters are self-explanatory)\n    y = \"Margin %\",             # Y-axis shows margin percentages\n    color = NULL                # Remove legend title\n  ) \n\nggplotly(_____, tooltip = c(\"x\", \"y\")) |>\n  layout(\n    # Show data for all series when hovering over a date\n    hovermode = \"x unified\",\n    # Customize hover label appearance\n    hoverlabel = list(font = list(size = 12))\n  )\n```\n:::\n\n\n## Cash Flow\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create quarterly cash flow data for 2026\n# Shows operating, investing, and financing cash flows by quarter\ncash_flow_data <- tribble(\n  ~category, ~q1, ~q2, ~q3, ~q4,\n  \"Operating\", 45, 48, 52, 55,      # Operating cash flow: positive and growing quarterly\n  \"Investing\", -20, -15, -18, -22,  # Investing cash flow: negative (capital expenditures)\n  \"Financing\", -15, -20, -25, -18   # Financing cash flow: negative (debt payments, dividends)\n) |>\n  # Transform from wide to long format for visualization\n  pivot_longer(cols = -category, names_to = \"quarter\", values_to = \"amount\") |>\n  mutate(\n    # Ensure quarters display in chronological order\n    quarter = factor(quarter, levels = c(\"q1\", \"q2\", \"q3\", \"q4\")),\n    # Create color classification for positive vs negative flows\n    color = if_else(amount >= 0, \"Positive\", \"Negative\")\n  )\n\n# Create grouped bar chart showing cash flows by category and quarter\ncash_plot <- cash_flow_data |>\n  ggplot(_____(x = quarter, y = amount, fill = category)) +\n  \n  # Use dodged bars to show all three categories side by side\n  geom_col(position = \"dodge\") +\n  \n  # Apply company color scheme to differentiate cash flow categories\n  scale_fill_manual(values = c(\n    \"Operating\" = company_colors$success,    # Green for positive operating cash\n    \"Investing\" = company_colors$warning,    # Orange for capital investments\n    \"Financing\" = company_colors$info        # Blue for financing activities\n  )) +\n  \n  # Format y-axis labels as dollar amounts with \"M\" suffix\n  scale_y_continuous(labels = dollar_format(suffix = \"M\")) +\n  \n  # Set chart title and axis labels\n  labs(\n    title = \"Quarterly Cash Flow Analysis\",\n    x = \"Quarter\",\n    y = NULL,\n    fill = NULL              # Legend title for cash flow categories\n  ) \n  \n\nggplotly(cash_plot)\n```\n:::\n\n\n# Market Position\n\n## Market Share\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create market share analysis\n# Create market share data showing current vs. prior year positions for all major competitors\nmarket_data <- tribble(\n  ~company, ~current_share, ~prior_share,\n  \"Our Company\", 22.5, 21.2,      # Our company: gained 1.3 percentage points\n  \"Competitor A\", 28.1, 28.5,     # Market leader: lost slight share (-0.4pp)\n  \"Competitor B\", 19.8, 20.1,     # Second competitor: also lost share (-0.3pp)\n  \"Competitor C\", 15.2, 14.8,     # Growing competitor: gained share (+0.4pp)\n  \"Others\", 14.4, 15.4           # Fragmented market: others losing share (-1.0pp)\n) |>\n  mutate(\n    # Calculate percentage point change from prior year\n    change = current_share - prior_share,\n    \n    # Create formatted display string with + for positive changes\n    change_label = paste0(if_else(change > 0, \"+\", \"\"), round(change, 1), \"pp\")\n  )\n\n# Create horizontal bar chart showing market share distribution and changes\nshare_plot <- market_data |>\n  # Reorder companies by current market share (ascending order for horizontal bars)\n  mutate(company = fct_reorder(company, current_share)) |>\n  \n  # Create horizontal bar chart with market share on x-axis\n  ggplot(aes(x = current_share, y = company)) +\n  \n  # Add bars showing current market share percentage\n  geom_col(fill = company_colors$primary) +\n  \n  # Add text labels showing current share percentage at end of each bar\n  geom_text(aes(label = paste0(current_share, \"%\")), \n          nudge_x = 1, size = 3) +\n          \n  # Add change indicators (YoY change in percentage points) on the left side of bars\n  geom_text(aes(x = 2, label = change_label), \n            color = \"white\", nudge_x = 2,\n            fontface = \"bold\", size = 3) +\n            \n  # Set x-axis limits and format as percentages\n  _____(limits = c(0, 30), labels = percent_format(scale = 1)) +\n  \n  # Set chart title and remove axis labels (self-explanatory)\n  labs(\n    title = \"Market Share Distribution: Current share % and YoY change\",\n    x = NULL,     # Remove x-axis label\n    y = NULL      # Remove y-axis label\n  )\n\n# Convert to interactive plotly chart with hover tooltips\nggplotly(share_plot, tooltip = c(\"x\", \"y\"))  \n```\n:::\n\n\n## Competitive Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create competitive benchmarking table\n# Create competitive benchmarking data showing key metrics across competitors\ncompetitive_data <- tribble(\n  ~metric, ~your_company, ~competitor_a, ~competitor_b, ~competitor_c,\n  \"Revenue Growth %\", 9.0, 7.5, 6.8, 8.2,      # Revenue growth: We lead at 9.0% vs competitors\n  \"EBITDA Margin %\", 18.2, 19.5, 16.8, 17.5,   # Profitability: Behind Competitor A by 130bps\n  \"Market Share %\", 22.5, 28.1, 19.8, 15.2,     # Market position: 2nd place, behind leader\n  \"Customer NPS\", 72, 78, 65, 70,                # Customer loyalty: Mid-pack performance\n  \"R&D Spend %\", 8.5, 9.2, 7.5, 8.0             # Innovation investment: Moderate spending level\n)\n\n# Create interactive table using DT package for enhanced user experience\ncompetitive_data |>\n  _____(\n    options = list(\n      dom = 't'              # Display only table (no search box, pagination controls)\n    ),\n    rownames = FALSE         # Don't show row numbers\n  ) |>\n  \n  # Highlight our company's column with company brand color and bold text\n  formatStyle(\n    columns = \"your_company\",             # Target our company's data column\n    backgroundColor = company_colors$primary,  # Use company primary color as background\n    color = \"white\",                      # White text for contrast\n    fontWeight = \"bold\"                   # Bold text to emphasize our performance\n  ) |>\n  \n  # Format numeric columns to show 1 decimal place for consistency\n  formatRound(columns = 2:5, digits = 1)  # Round columns 2-5 (all competitor data) to 1 decimal\n```\n:::\n\n\n# Customer Metrics\n\n## Customer Health\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create customer health metrics data\n# This table tracks key customer success indicators with their current values,\n# targets, and performance trends using arrow symbols\ncustomer_metrics <- tribble(\n  ~metric, ~current, ~target, ~trend,\n  \"NPS\", 72, 75, \"↑\",                          # Net Promoter Score: improving but below target\n  \"Retention Rate %\", 88.5, 90, \"↑\",          # Customer retention: trending up, close to target\n  \"Lifetime Value ($K)\", 142, 150, \"↑\",       # CLV: growing but needs 8K increase to hit target\n  \"Acquisition Cost ($)\", 450, 500, \"↓\",      # CAC: decreasing (good), under budget by $50\n  \"Upsell Rate %\", 22, 25, \"→\"                # Upselling: flat performance, 3pp below target\n) |>\n  mutate(\n    # Calculate performance ratio: current vs target\n    # For acquisition cost, lower is better so we flip the ratio (target/current)\n    performance = if_else(\n      metric == \"Acquisition Cost ($)\",\n      target / current,                         # For cost metrics: target/current (lower cost = better performance)\n      current / target                          # For all other metrics: current/target (higher = better)\n    ),\n    \n    # Categorize performance status based on achievement percentage\n    status = case_when(\n      performance >= 1.0 ~ \"On Target\",         # 100%+ of target achieved\n      performance >= 0.9 ~ \"Near Target\",      # 90-99% of target achieved  \n      TRUE ~ \"Below Target\"                     # Less than 90% of target achieved\n    )\n  )\n\n# Create horizontal bar chart to visualize customer health metrics\ncustomer_plot <- customer_metrics |>\n  ggplot(aes(x = performance, y = metric, fill = status)) +\n  \n  # Add horizontal bars showing performance ratio for each metric\n  geom_col() +\n  \n  # Add vertical reference line at 100% target achievement\n  geom_vline(xintercept = 1.0, linetype = \"dashed\") +\n  \n  # Add performance percentage labels at the end of each bar\n  _____(aes(label = percent(performance, accuracy = 2)), \n            nudge_x = 0.04, size = 3, color = \"black\") +\n            \n  # Format x-axis as percentages with upper limit of 120%\n  scale_x_continuous(labels = percent_format(), limits = c(0, 1.2)) +\n  \n  # Apply color coding based on performance status\n  scale_fill_manual(values = c(\n    \"On Target\" = company_colors$success,      # Green for metrics meeting target\n    \"Near Target\" = company_colors$warning,    # Orange for metrics close to target\n    \"Below Target\" = company_colors$danger     # Red for metrics significantly below target\n  )) +\n  \n  # Set chart title and axis labels\n  _____(\n    title = \"Customer Success Metrics\",\n    x = \"Performance vs. Target\",              # X-axis shows achievement percentage\n    y = NULL,                                  # Remove y-axis label (metric names are self-explanatory)\n    fill = NULL                       # Remove legend title for status categories\n  )\n\nggplotly(customer_plot)\n```\n:::\n\n\n## Segment Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Analyze customers by segment\n# Create customer segment analysis data\n# This data shows revenue, growth rates, margins, and customer counts for each business segment\nsegment_data <- tribble(\n  ~segment, ~revenue_m, ~growth_pct, ~margin_pct, ~customers,\n  \"Enterprise\", 425, 12, 22, 150,      # Enterprise: High revenue, growth, margins but fewer customers\n  \"Mid-Market\", 285, 8, 18, 450,       # Mid-Market: Moderate metrics across all dimensions\n  \"Small Business\", 140, 5, 15, 2500   # Small Business: Lower margins/growth but high customer volume\n) |>\n  mutate(\n    # Calculate average revenue per customer for each segment (convert $M to $K)\n    revenue_per_customer = revenue_m * 1000 / customers,\n    \n    # Create composite score combining growth rate and profitability\n    segment_score = (growth_pct + margin_pct) / 2\n  )\n\n# Create bubble chart to visualize segment performance across multiple dimensions\nsegment_plot <- segment_data |>\n  ggplot(aes(x = growth_pct, y = margin_pct, size = revenue_m, color = segment)) +\n  \n  # Add bubble points with transparency for overlapping bubbles\n  geom_point(alpha = 0.7) +\n  \n  # Set bubble size range (5-20 point scale) based on revenue\n  scale_size_continuous(range = c(5, 20)) +\n  \n  # Apply company color scheme to differentiate segments\n  scale_color_manual(values = c(\n    \"Enterprise\" = company_colors$primary,     # Blue for enterprise segment\n    \"Mid-Market\" = company_colors$success,     # Green for mid-market segment\n    \"Small Business\" = company_colors$neutral # Grey for small business segment\n  )) +\n  \n  # Format axes as percentages for better readability\n  scale_x_continuous(labels = percent_format(scale = 1), limits = c(0, 15)) +\n  scale_y_continuous(labels = percent_format(scale = 1), limits = c(0, 25)) +\n  \n  # Set chart labels and legend titles\n  labs(\n    title = \"Customer Segment Analysis\",\n    subtitle = \"Bubble size = Revenue\",           # Explain what bubble size represents\n    x = \"Growth Rate %\",                          # X-axis shows segment growth performance\n    y = \"Margin %\",                              # Y-axis shows segment profitability\n    color = \"Segment\",                           # Legend for segment colors\n    size = \"Revenue ($M)\"                        # Legend for bubble sizes\n  )\n\nggplotly(_____)\n```\n:::\n\n\n# Operational Excellence\n\n## Efficiency Metrics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create operational efficiency dashboard\n# Build operational metrics data comparing actual performance to industry benchmarks\nops_metrics <- tribble(\n  ~category, ~metric, ~value, ~benchmark,\n  \"Productivity\", \"Revenue per Employee ($K)\", 425, 400,  # Revenue productivity: $425K vs $400K benchmark\n  \"Productivity\", \"Units per Hour\", 82, 75,               # Manufacturing productivity: 82 vs 75 units/hour\n  \"Efficiency\", \"Asset Turnover\", 1.8, 1.5,              # Asset utilization: 1.8x vs 1.5x benchmark\n  \"Efficiency\", \"Inventory Turns\", 12.5, 10.0,           # Inventory management: 12.5 vs 10.0 turns/year\n  \"Quality\", \"Defect Rate %\", 1.2, 2.0,                  # Quality performance: 1.2% vs 2.0% benchmark\n  \"Quality\", \"On-Time Delivery %\", 94.5, 92.0            # Service quality: 94.5% vs 92.0% benchmark\n) |>\n  _____(\n    # Calculate percentage difference from benchmark for each metric\n    vs_benchmark = (value - benchmark) / benchmark,\n    \n    # Adjust performance calculation: for defect rate, lower values are better\n    # so we flip the sign to show positive performance when defects are below benchmark\n    performance = if_else(\n      metric %in% c(\"Defect Rate %\"),\n      -vs_benchmark,  # Lower defect rate = better performance (flip sign)\n      vs_benchmark    # For all other metrics, higher values = better performance\n    )\n  )\n\n# Create horizontal bar chart showing performance vs benchmarks\nops_plot <- ops_metrics |>\n  ggplot(aes(y = metric, x = performance, fill = category)) +\n  \n  # Add bars showing performance relative to benchmark (positive = above benchmark)\n  geom_col() +\n  \n  # Add reference line at zero (benchmark level)\n  geom_vline(xintercept = 0, linetype = \"solid\") +\n  \n  # Format y-axis as percentages (e.g., 0.06 displays as 6%)\n  scale_x_continuous(labels = percent_format()) +\n  \n  # Apply company color scheme to differentiate metric categories\n  scale_fill_manual(values = c(\n    \"Productivity\" = company_colors$primary,    # Blue for productivity metrics\n    \"Efficiency\" = company_colors$success,      # Green for efficiency metrics  \n    \"Quality\" = company_colors$neutral          # Grey for quality metrics\n  )) +\n  \n  # Set chart title and axis labels\n  labs(\n    title = \"Operational Performance vs. Benchmark\",\n    x = NULL,                                   # Remove x-axis label (metric names are self-explanatory)\n    y = \"Performance vs. Benchmark\",            # Y-axis shows percentage above/below benchmark\n    fill = \"Category\"                           # Legend title for metric categories\n  )\n\n# Convert to interactive plotly chart with hover functionality\nggplotly(ops_plot)\n```\n:::\n\n\n## Quality Indicators\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Track quality metrics over time\n# Create monthly quality metrics data for the first half of 2026\nquality_trend <- tribble(\n  ~month, ~complaints, ~defects, ~satisfaction,\n  \"2026-01-01\", 45, 1.5, 88,    # January: 45 complaints, 1.5% defects, 88 satisfaction\n  \"2026-02-01\", 42, 1.4, 89,    # February: Slight improvement across all metrics\n  \"2026-03-01\", 38, 1.3, 90,    # March: Continued positive trend in quality indicators\n  \"2026-04-01\", 35, 1.2, 91,    # April: Sustained improvement momentum\n  \"2026-05-01\", 32, 1.2, 92,    # May: Complaints decreasing, satisfaction increasing\n  \"2026-06-01\", 30, 1.1, 93     # June: Best performance with lowest complaints/defects\n) |>\n  # Convert to proper date format\n  mutate(\n    month = as.Date(_____),\n    month_label = format(month, \"%b\")  # Get abbreviated month names\n  )\n\n# Create quality dashboard with trend visualization\nquality_plot <- quality_trend |>\n  # Transform data from wide to long format for multi-line plotting\n  _____(cols = c(complaints, defects, satisfaction), \n              names_to = \"metric\", \n              values_to = \"value\") |>\n  \n  # Create user-friendly metric labels for display\n  mutate(\n    metric_label = _____(\n      metric == \"complaints\" ~ \"Customer Complaints\",      \n      metric == \"defects\" ~ \"Defect Rate %\",              \n      metric == \"satisfaction\" ~ \"Satisfaction Score\"      \n    ),\n    # Ensure proper ordering for facets\n    metric_label = factor(metric_label, \n                      levels = c(\"Customer Complaints\", \n                              \"Defect Rate %\", \n                                  \"Satisfaction Score\"))\n  ) |>\n  \n  # Create line chart with separate panels for each quality metric\n  ggplot(aes(x = month, y = value, color = metric_label, group = metric_label)) +\n  \n  # Add trend lines with increased thickness for visibility\n  geom_line(size = 2) +\n  \n  # Add data points to highlight monthly values\n  geom_point(size = 3) +\n  \n  # Use date scale for x-axis with monthly breaks\n  scale_x_date(\n    date_breaks = \"1 month\",\n    date_labels = \"%b\",\n    expand = c(0, 0.05)  # Add some padding\n  ) +\n  \n  # Create separate panels for each metric with independent y-axis scales\n  facet_wrap(~metric_label, scales = \"free_y\", ncol = 1) +\n  \n  # Apply color scheme based on metric type\n  scale_color_manual(values = c(\n    \"Customer Complaints\" = company_colors$danger,     \n    \"Defect Rate %\" = company_colors$warning,          \n    \"Satisfaction Score\" = company_colors$success      \n  )) +\n  \n  # Set chart title and labels\n  labs(\n    title = \"Quality Trends: 6-Month Quality Performance Indicators\",\n    x = NULL,\n    y = NULL\n  ) +\n  # Improve theme\n  theme(\n    legend.position = \"none\",\n  )\n\n# Convert to interactive plotly chart\nggplotly(quality_plot, tooltip = c(\"x\", \"y\", \"group\")) |>\n  layout(\n    # Show data for all series when hovering over a date\n    hovermode = \"x unified\"\n  )\n```\n:::\n\n\n# Innovation & Growth \n\n## R&D Pipeline\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize innovation pipeline\n# Create R&D innovation pipeline data\n# This table tracks projects at each stage of development from initial research to market launch\npipeline_data <- tribble(\n  ~stage, ~projects, ~potential_value,\n  \"Research\", 45, 250,          # Research stage: 45 projects with $250M potential value\n  \"Development\", 30, 180,       # Development stage: 30 projects narrowed down, $180M potential  \n  \"Testing\", 18, 120,           # Testing stage: 18 projects in trials/validation, $120M potential\n  \"Launch Ready\", 8, 85         # Launch ready: 8 projects ready for market, $85M near-term value\n) |>\n  mutate(\n    # Set stage order from top to bottom (reverse order for funnel visualization)\n    stage = factor(stage, levels = rev(c(\"Research\", \"Development\", \n                                        \"Testing\", \"Launch Ready\"))),\n    # Calculate conversion rate between consecutive stages (projects that advance)\n    conversion_rate = projects / lag(projects)\n  )\n\n# Create horizontal funnel chart showing innovation pipeline progression\npipeline_plot <- pipeline_data |>\n  ggplot(aes(x = potential_value, y = stage, fill = potential_value)) +\n  \n  # Add horizontal bars representing potential value at each stage\n  geom_col() +\n  \n  scale_x_continuous(labels = label_dollar(suffix = \"M\")) +\n  # Add text labels showing both potential value and number of projects\n  _____(aes(label = paste0(dollar(potential_value), \"M\\n\", \n                              projects, \" projects\")),\n            nudge_x = -20, color = \"white\", fontface = \"bold\") +\n            \n  # Apply color gradient: lighter for early stages, darker for advanced stages\n  scale_fill_gradient(low = company_colors$warning,    # Orange for early stages (research)\n          high = company_colors$success) +  # Green for advanced stages (launch ready)\n                    \n  # Set chart title and axis labels\n  labs(\n    title = \"Innovation Pipeline: Projects and potential value by stage\",\n    x = NULL,              # Remove x-axis \n    y = NULL                                 # Remove y-axis label (stage names are self-explanatory)\n  ) +\n  theme(legend.position = \"none\") \n  \n\npipeline_plot\n```\n:::\n\n\n## Digital Transformation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Track digital initiatives progress\ndigital_projects <- tribble(\n  ~initiative, ~completion_pct, ~impact, ~status,\n  \"Cloud Migration\", 78, \"High\", \"On Track\",\n  \"AI/ML Platform\", 45, \"High\", \"Behind\",\n  \"Customer Portal\", 92, \"Medium\", \"Nearly Complete\",\n  \"Process Automation\", 65, \"High\", \"On Track\",\n  \"Data Analytics\", 35, \"Critical\", \"At Risk\"\n) |>\n  mutate(\n    initiative = factor(initiative, levels = rev(initiative)),\n    # Order impact levels\n    impact = factor(impact, levels = c(\"Medium\", \"High\", \"Critical\"))\n  )\n\n# Visualize progress with impact shown\ndigital_plot <- digital_projects |>\n  ggplot(aes(x = completion_pct, _____ = initiative)) +\n  # Base bar colored by status\n  geom_col(aes(fill = status)) +\n  # Impact labels on the bars\n  geom_text(aes(x = completion_pct/2, label = paste0(\"Impact: \", impact)), \n            color = \"white\", fontface = \"bold\", size = 3) +\n  scale_x_continuous(limits = c(0, 105), \n                    labels = percent_format(scale = 1)) +\n  scale_fill_manual(values = c(\n    \"Complete\" = company_colors$success,\n    \"Nearly Complete\" = \"#81c784\",\n    \"On Track\" = company_colors$primary,\n    \"Behind\" = company_colors$warning,\n    \"At Risk\" = company_colors$danger\n  )) +\n  labs(\n    title = \"Digital Transformation Progress\",\n    x = \"Completion\",\n    y = NULL,\n    fill = \"Status\"\n  ) \n\nggplotly(digital_plot)\n```\n:::\n\n\n# Strategic Forecast \n\n## 5-Year Outlook\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create 5-year financial forecast data\n# This table projects key financial and market metrics from 2024 to 2028\nforecast_data <- tribble(\n  ~year, ~revenue, ~ebitda_margin, ~market_share,\n  2024, 720, 16.8, 20.5,     # 2024 baseline: $720M revenue, 16.8% EBITDA margin, 20.5% market share\n  2025, 780, 17.5, 21.2,     # 2025: 8.3% revenue growth, margin improvement, gaining market share\n  2026, 850, 18.2, 22.5,     # 2026 current: 9.0% revenue growth, continued margin expansion\n  2027, 925, 19.0, 23.5,     # 2027 projection: 8.8% revenue growth, approaching 19% EBITDA target\n  2028, 1010, 19.8, 24.3     # 2028 target: Cross $1B revenue milestone, nearly 20% EBITDA margin\n) |>\n  mutate(\n    # Calculate year-over-year revenue growth percentage for trend analysis\n    revenue_growth = (revenue / lag(revenue) - 1) * 100,\n    \n    # Calculate absolute EBITDA dollars (revenue × margin percentage)\n    ebitda_dollars = revenue * ebitda_margin / 100\n  )\n\n# Create forecast visualization showing trends across all key metrics\nforecast_plot <- forecast_data |>\n  # Select the three main forecast metrics for visualization\n  _____(year, revenue, ebitda_margin, market_share) |>\n  \n  # Transform from wide to long format for multi-line plotting\n  _____(cols = -year, names_to = \"metric\", values_to = \"value\") |>\n  \n  # Create user-friendly metric labels for chart display\n  mutate(\n    metric_label = case_when(\n      metric == \"revenue\" ~ \"Revenue ($M)\",           # Revenue in millions of dollars\n      metric == \"ebitda_margin\" ~ \"EBITDA Margin %\", # EBITDA margin as percentage\n      metric == \"market_share\" ~ \"Market Share %\"    # Market share as percentage\n    )\n  ) |>\n  \n  # Create line chart with separate panels for each metric\n  ggplot(aes(x = year, y = value, color = metric_label)) +\n  \n  # Add trend lines with increased thickness for visibility\n  geom_line(size = 2) +\n  \n  # Add data points to highlight yearly values\n  geom_point(size = 3) +\n  \n  # Create separate panels for each metric with independent y-axis scales\n  facet_wrap(~metric_label, scales = \"free_y\", ncol = 1) +\n  \n  # Apply company color scheme to differentiate metrics\n  scale_color_manual(values = c(\n    \"Revenue ($M)\" = company_colors$primary,        # Blue for revenue trend\n    \"EBITDA Margin %\" = company_colors$success,     # Green for profitability trend\n    \"Market Share %\" = company_colors$info          # Light blue for market position trend\n  )) +\n  \n  # Set chart title and remove axis labels (panel titles are self-explanatory)\n  labs(\n    title = \"5-Year Strategic Forecast\",\n    x = NULL,    # Remove x-axis label (years are obvious)\n    y = NULL     # Remove y-axis label (units shown in panel titles)\n  ) +\n  \n  # Hide legend since colors are obvious from panel titles\n  theme(legend.position = \"none\")\n\nggplotly(forecast_plot) |>\n  layout(\n    # Show data for all series when hovering over a date\n    hovermode = \"x unified\",\n    # Customize hover label appearance\n    hoverlabel = list(font = list(size = 12))\n  )\n```\n:::\n\n\n## Scenario Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create best/base/worst case scenarios\n# Create scenario analysis data with three potential outcomes for 2028\n# Each scenario includes revenue projection, EBITDA margin, and probability of occurrence\nscenarios <- tribble(\n  ~scenario, ~revenue_2028, ~ebitda_2028, ~probability,\n  \"Best Case\", 1150, 21.5, 20,      # Optimistic: $1.15B revenue, 21.5% EBITDA margin, 20% probability\n  \"Base Case\", 1010, 19.8, 60,      # Expected: $1.01B revenue, 19.8% EBITDA margin, 60% probability  \n  \"Worst Case\", 875, 17.5, 20       # Pessimistic: $875M revenue, 17.5% EBITDA margin, 20% probability\n) |>\n  mutate(\n    # Set scenario order from best to worst for consistent visualization\n    scenario = factor(scenario, levels = c(\"Best Case\", \"Base Case\", \"Worst Case\")),\n    \n    # Calculate probability-weighted expected value for each scenario\n    expected_value = revenue_2028 * probability / 100\n  )\n\n# Transform scenario data for visualization\n# Select key metrics and convert from wide to long format for charting\nscenario_data <- scenarios |>\n  select(scenario, revenue_2028, ebitda_2028) |>\n  \n  # Pivot to long format: one row per scenario-metric combination\n  pivot_longer(cols = -scenario, names_to = \"metric\", values_to = \"value\") |>\n  \n  # Create user-friendly metric labels for chart display\n  _____(\n    metric_label = if_else(metric == \"revenue_2028\", \n                          \"Revenue ($M)\",           # Revenue projections in millions\n                          \"EBITDA Margin %\")        # EBITDA margins as percentages\n  )\n\n# Create scenario comparison visualization\nscenario_plot <- scenario_data |>\n  ggplot(aes(x = scenario, y = value, fill = scenario)) +\n  \n  # Add bars showing projected values for each scenario\n  geom_col() +\n  \n  # Add value labels on top of each bar for precise reading\n  geom_text(aes(label = round(value, 1)), \n            nudge_y = .2, size = 3) +\n            \n  # Create separate panels for revenue vs EBITDA margin (different scales)\n  facet_wrap(~metric_label, scales = \"free_y\") +\n  \n  # Apply color coding: green for best case, blue for base case, red for worst case\n  scale_fill_manual(values = c(\n    \"Best Case\" = company_colors$success,      # Green for optimistic scenario\n    \"Base Case\" = company_colors$primary,      # Blue for expected scenario\n    \"Worst Case\" = company_colors$danger       # Red for pessimistic scenario\n  )) +\n  \n  # Set chart title and remove axis labels (scenario names and panel titles are self-explanatory)\n  labs(\n    title = \"2028 Scenario Analysis\",\n    x = NULL,     # Remove x-axis label (scenario names are clear)\n    y = NULL      # Remove y-axis label (units shown in panel titles)\n  ) +\n  \n  # Hide legend since colors are intuitive (green=good, red=bad)\n  theme(legend.position = \"none\")\n\n# Convert to interactive plotly chart with hover functionality\nggplotly(scenario_plot)\n```\n:::\n\n\n# Insights & Actions\n\n## Key Strategic Findings\n\nBased on your dashboard analysis, identify the following:\n\n**Financial Performance**:\n\n- Revenue growth rate: _____% \n- EBITDA margin vs. target: _____ bps\n- Free cash flow growth: _____%\n\n**Market Position**:\n\n- Market share change: _____ pp\n- Competitive advantage in: _____\n- Key competitor threats: _____\n\n**Customer Health**:\n\n- Net Promoter Score: _____\n- Customer retention rate: _____%\n- Lifetime value to CAC ratio: _____:1\n\n**Operational Excellence**:\n\n- Revenue per employee: $_____\n- Quality metrics trending: ↑/↓/→\n- Digital transformation progress: _____%\n\n## Strategic Priorities\n\nComplete these action items based on your analysis:\n\n**Immediate Actions** (This Quarter):\n\n- Address margin gap by: _____\n- Launch initiative to improve: _____\n- Accelerate progress on: _____\n\n**Short-term Focus** (Next 6 Months):\n\n- Capture market share through: _____\n- Improve customer NPS by implementing: _____\n- Complete digital transformation of: _____\n\n**Long-term Strategy** (Next Year):\n\n- Achieve revenue target of $_____ by: _____\n- Expand into new markets: _____\n- Build competitive moat through: _____\n\n## Risk Mitigation\n\n**Identified Risks**:\n\n- Primary competitive threat: _____\n- Operational bottleneck: _____\n- Customer satisfaction gap: _____\n\n**Mitigation Strategies**:\n\n- Invest $_____ in: _____\n- Hire _____ resources for: _____\n- Partner with _____ to address: _____",
>>>>>>> a872259 (changed eval to false and added format: dashboard for 10-12)
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}