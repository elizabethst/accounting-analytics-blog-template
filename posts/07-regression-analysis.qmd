---
title: "7: Regression Analysis for Financial Forecasting"
date: today
execute: 
  eval: false # set to true 
  message: false
  warning: false
---

## Executive Summary

*Write a 2-3 sentence summary of your regression analysis findings, including the most important predictors identified and the accuracy of your models. Complete this section after finishing the assignment.*

---

## Introduction

As an accounting professional, you need to forecast financial outcomes and identify unusual patterns that may require investigation. Regression analysis helps accountants:

- Predict future revenues based on business drivers
- Forecast expenses for budgeting purposes
- Identify transactions that deviate from expected patterns
- Perform analytical procedures during audits

In this blog post, you will:

- Build regression models to forecast revenue and expenses
- Validate models using proper train/test splits
- Identify outliers for audit investigation
- Create flexible budgets based on regression results

## Setup and Load Libraries

### Required Libraries

```{r}
#| label: setup
# Load packages we need - matching the slides
library(tidyverse)    # For data manipulation
library(tidymodels)   # For modeling
library(scales)       # For formatting numbers
library(gt)           # For nice tables
library(patchwork)    # For combining plots

# Set preferences
theme_set(theme_minimal())  # Clean plots
tidymodels_prefer()        # Prefer tidymodels functions
options(scipen = 999)      # No scientific notation
set.seed(2027)             # Reproducible results
```

### Load and Explore the Data
```{r}
# Load the financial data
financial_data <- read_csv("https://estanny.org/data/07_company_financial_data.csv")

# Display structure of the data
glimpse(financial_data)

# Basic summary statistics
summary(financial_data)
```

## Initial Data Exploration

### Revenue and Expense Trends

```{r}
# Visualize revenue over time
financial_data |>
  ggplot(aes(x = month_date, y = revenue)) +
  geom_line(color = "darkblue") +
  geom_point(color = "darkblue") +
  scale_y_continuous(labels = dollar_format()) +
  labs(
    title = "Monthly Revenue Trend",
    subtitle = "_____", #Identify patterns and potential seasonality
    x = "Month",
    y = "Revenue"
  )

```

### Relationship Analysis

```{r}
# Explore relationships between variables
# Example: Revenue vs Marketing Spend
financial_data |>
  ggplot(aes(x = _____, y = _____)) +  # Fill in variables
  geom_point(alpha = 0.7) +
  geom_smooth(method = "lm", se = TRUE, color = "red") +
  scale_x_continuous(labels = _____) +  # Format appropriately
  scale_y_continuous(labels = _____) +  # Format appropriately
  labs(
    title = "Relationship Between _____ and _____",
    x = "_____",
    y = "_____"
  )
```

## Revenue Forecasting Model

### Step 1: Prepare Data for Modeling

```{r}
# Create features for revenue model
revenue_data <- financial_data |>
  select(
    revenue,           # Target variable
    _____,            # Predictor 1 (e.g., marketing_spend)
    _____,            # Predictor 2 (e.g., customer_count)
    month_num            # Month 
  ) |>
  drop_na()  # Remove any missing values

# Split the data (following slides approach)
set.seed(2027)
revenue_split <- initial_split(_____, prop = _____, strata = revenue)
revenue_train <- training(_____)
revenue_test <- testing(_____)

# Check the split
tibble(
  Dataset = c("Training", "Testing", "Total"),
  Observations = c(nrow(revenue_train), nrow(revenue_test), nrow(revenue_data))
) |>
  gt() |>
  tab_header(title = "Data Split Summary")
```

### Step 2: Build and Fit Revenue Model

```{r}
# Create model specification
revenue_spec <- linear_reg() |>
  set_engine("_____") |>      # Which engine?
  set_mode("_____")           # Which mode?

# Fit the model
revenue_fit <- revenue_spec |>
  fit(_____ ~ _____, data = _____)  # Complete the formula

# Display model coefficients
revenue_fit |>
  tidy() |>
  gt() |>
  tab_header(title = "Revenue Model Coefficients") |>
  fmt_number(columns = where(is.numeric), decimals = 2) |>
  fmt_currency(columns = estimate)
```

### Step 3: Evaluate Revenue Model

```{r}
# Make predictions on test set
revenue_results <- revenue_fit |>
  augment(_____)  # Which dataset?

# Calculate performance metrics
revenue_metrics <- bind_rows(
  revenue_results |>
    metrics(truth = _____, estimate = _____),  # Fill in columns
  revenue_results |>
    mape(truth = _____, estimate = _____)      # Fill in columns
)

# Display metrics with interpretation
revenue_metrics |>
  mutate(
    interpretation = case_when(
      .metric == "rmse" ~ "Average prediction error",
      .metric == "rsq" ~ "Variance explained",
      .metric == "mae" ~ "Average absolute error",
      .metric == "mape" ~ "Mean absolute percentage error"
    )
  ) |>
  gt() |>
  tab_header(title = "Revenue Model Performance")
```

### Step 4: Revenue Predictions

```{r}
# Create scenarios for prediction
revenue_scenarios <- tibble(
  scenario = c("Conservative", "Base Case", "Optimistic"),
  marketing_spend = c(_____, _____, _____),    # Fill in values
  customer_count = c(_____, _____, _____),     # Fill in values
  # Add other predictors as needed
)

# Make predictions
revenue_predictions <- revenue_fit |>
  augment(_____) |>  # Which data?
  select(scenario, _____, .pred) |>  # Select relevant columns
  gt() |>
  tab_header(title = "Revenue Forecast Scenarios") |>
  fmt_currency(columns = c(_____, .pred))  # Format columns

revenue_predictions
```

## Expense Analysis Model

### Step 1: Prepare Expense Data

```{r}
# Create expense analysis dataset
expense_data <- financial_data |>
  select(
    operating_expenses,    # Target variable
    _____,                # Predictor 1 (e.g., production_volume)
    _____,                # Predictor 2 (e.g., employee_count)
    month_num                # Month
  ) |>
  drop_na()

# Split the data
set.seed(2027)
expense_split <- initial_split(_____, prop = _____, strata = operating_expenses)
expense_train <- training(_____)
expense_test <- testing(_____)
```

### Step 2: Build Expense Model

```{r}
# Fit expense model
expense_fit <- linear_reg() |>
  set_engine("lm") |>
  set_mode("regression") |>
  fit(_____ ~ _____, data = _____)  # Complete formula

# Extract fixed and variable cost components
expense_fit |>
  tidy() |>
  mutate(
    cost_type = case_when(
      term == "(Intercept)" ~ "Fixed Costs",
      TRUE ~ paste("Variable Cost per", term)
    )
  ) |>
  select(cost_type, estimate) |>
  gt() |>
  tab_header(title = "Cost Structure Analysis") |>
  fmt_currency(columns = estimate)
```

### Step 3: Create Flexible Budget

```{r}
# Create flexible budget for different activity levels
activity_levels <- tibble(
  activity_level = c("Low (70%)", "Normal (100%)", "High (130%)"),
  production_volume = c(_____, _____, _____),  # Fill in values
  # Add other relevant drivers
)

# Generate flexible budget
flexible_budget <- expense_fit |>
  augment(_____) |>  # Which data?
  mutate(
    # Calculate confidence intervals
    model_sigma = sigma(expense_fit$fit),
    .pred_lower = .pred - (1.96 * model_sigma),
    .pred_upper = .pred + (1.96 * model_sigma)
  ) |>
  select(activity_level, production_volume, .pred, .pred_lower, .pred_upper)

# Display flexible budget
flexible_budget |>
  gt() |>
  tab_header(title = "Flexible Budget for Operating Expenses") |>
  fmt_currency(columns = c(.pred, .pred_lower, .pred_upper))
```

## Audit Application: Analytical Procedures

### Step 1: Build Expected Values Model

```{r}
# Create model for expected sales based on economic indicators
audit_data <- financial_data |>
  select(
    reported_sales,      # What we're checking
    economic_index,      # External indicator
    month_num           # Month
  ) |>
  drop_na()

# Use time-based split for audit procedures
audit_split <- initial_time_split(_____, prop = _____)
audit_train <- training(_____)
audit_test <- testing(_____)

# Build expectation model
audit_model <- linear_reg() |>
  set_engine("lm") |>
  set_mode("regression") |>
  fit(_____ ~ _____, data = _____)
```

### Step 2: Identify Exceptions

```{r}
# Generate expectations for all periods
audit_analysis <- audit_model |>
  augment(_____) |>  # Use full dataset
  mutate(
    difference = _____ - _____,  # Actual - Predicted
    pct_difference = difference / _____,
    investigate = abs(pct_difference) > _____  # Set threshold (e.g., 0.05)
  )

# Identify periods requiring investigation
exceptions <- audit_analysis |>
  filter(_____) |>  # Filter for investigations
  arrange(desc(abs(pct_difference))) |>
  select(month_num, reported_sales, .pred, pct_difference)

# Display exceptions
exceptions |>
  gt() |>
  tab_header(title = "Sales Requiring Investigation") |>
  fmt_currency(columns = c(reported_sales, .pred)) |>
  fmt_percent(columns = pct_difference)
```

### Step 3: Visualize Analytical Review

```{r}
# Create visualization of actual vs expected
audit_analysis |>
  ggplot(aes(x = month_num)) +
  geom_line(aes(y = reported_sales, color = "Reported"), size = 1) +
  geom_line(aes(y = .pred, color = "Expected"), size = 1, linetype = "dashed") +
  geom_point(
    data = filter(audit_analysis, investigate),
    aes(y = reported_sales),
    color = "red",
    size = 3
  ) +
  scale_y_continuous(labels = dollar_format()) +
  scale_color_manual(values = c("Reported" = "darkblue", "Expected" = "darkgreen")) +
  labs(
    title = "Analytical Review: Reported vs Expected Sales",
    subtitle = "Red points indicate exceptions requiring investigation",
    x = "Month",
    y = "Sales",
    color = NULL
  )
```


## Key Findings and Recommendations

Based on the regression analysis, complete these insights:

1. **Revenue Model Performance**: The model explained _____% of revenue variance, with _____ being the strongest predictor (coefficient = $_____).

2. **Key Revenue Drivers**:
   - Every $1,000 increase in _____ leads to $_____ increase in revenue
   - _____ shows a _____ relationship with revenue
   - Model MAPE of _____% suggests predictions are within $_____ on average

3. **Expense Insights**:
   - Fixed costs are estimated at $_____
   - Variable cost per _____ is $_____
   - The flexible budget shows expenses ranging from $_____ to $_____ 

4. **Audit Findings**:
   - _____ periods showed significant deviations (>5%)
   - Largest exception was in _____ with _____% difference
   - Total value of transactions requiring investigation: $_____

5. **Recommendations**:
   - Use revenue model for _____-month ahead forecasts
   - Update expense model quarterly to reflect changing cost structure
   - Investigate all sales deviations greater than _____% or $_____
   - Consider additional predictors such as _____ to improve model accuracy. 