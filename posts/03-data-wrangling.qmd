---
title: "3: Data Wrangling"
date: today
execute: 
  eval: false  #set to true
  message: false
  warning: false
---


## Executive Summary

*Write a 2-3 sentence summary of your analysis and key findings here after completing the assignment.*

---

## Introduction

As an accounting professional, you'll often receive data that needs cleaning before analysis. Common issues include:

- Inconsistent date formats (01/15/2027 vs 2027-01-15)
- Mixed number formats ($1,234.56 vs 1234.56)
- Inconsistent text (ACME CORP vs Acme Corp vs acme corp)
- Data stored in multiple systems that need to be combined

In this blog post, you will:

- Identify data quality issues
- Clean messy accounting data
- Combine data from multiple sources
- Create professional summaries


## Setup and Load Libraries

### Required Libraries

```{r}
#| label: setup
# Load required packages
library(tidyverse)  # For data manipulation
library(scales)     # For formatting numbers
```

### Creating Sample Data

Let's create sample data that shows common accounting data problems:

**Sales Transaction Data**

```{r}
# Sales data with typical formatting issues
sales_raw <- tribble(
  ~transaction_id, ~customer_id, ~sale_date,     ~amount,       ~product_category,
  "TXN-001",      "CUST001",    "01/15/2027",   "$25,000.00",  "Software",
  "TXN-002",      "CUST002",    "01/20/2027",   "15000",       "Hardware", 
  "TXN-003",      "CUST003",    "2027-02-01",   "$8,750.50",   "Services",
  "TXN-004",      "CUST001",    "02/15/2027",   "12000.00",    "software",
  "TXN-005",      "CUST999",    "02/28/2027",   "$5,500",      "Hardware", # Bad customer
  "TXN-006",      "CUST004",    "3/10/2027",    "18500",       "Services",
  "TXN-007",      "CUST002",    "03/15/2027",   "$22,000",     "Software",
  "TXN-008",      "CUST003",    "2027-03-20",   "9750.00",     "HARDWARE"
)

# View the raw data
sales_raw
```

**Customer Master Data**


```{r}
# Customer data with inconsistent formatting
customers_raw <- tribble(
  ~customer_id, ~customer_name,      ~region, ~segment,
  "CUST001",   "acme corporation",   "North", "Enterprise",
  "CUST002",   "GLOBEX INC",        "South", "Mid-Market",
  "CUST003",   "umbrella corp",      "West",  "",           # Missing segment
  "CUST004",   "Stark Industries",   "East",  "Enterprise",
  "CUST005",   "wayne enterprises",  "North", "Enterprise"  # No sales in Q1
)

# View the raw customer data
customers_raw
```


### Identifying Data Quality Issues
Before cleaning, let's identify the problems:

**Check Date Formats**

```{r}
#| eval: false
# Look at the different date formats
sales_raw |> 
  select(sale_date) |>
  distinct()
```

**Check Amount Formats**

```{r}
# Look at the different amount formats
sales_raw |>
  select(amount) |>
  distinct()
```

**Check Customer Name Consistency**

```{r}
# Look at customer name formatting
customers_raw |>
  select(customer_name)
```


**Find Missing Data**



```{r}
# Check for blank segments
customers_raw |>
  filter(segment == "")
```

### Cleaning the Data

#### Step 1: Clean Sales Data

```{r}
# Clean the sales data
sales_clean <- sales_raw |>
  mutate(
    # Fix dates: parse_date_time can handle multiple formats
    sale_date = parse_date_time(sale_date, orders = c("mdy", "ymd")) |> 
                as_date(),

    # Fix amounts: remove $ and , then convert to number
    amount = str_remove_all(amount, "[$,]") |>  # Remove $ and ,
      as.numeric(),

    # Standardize text to Title Case
    product_category = str_to_title(product_category),
    
    # Add useful columns for reporting
    month_name = month(sale_date, label = TRUE, abbr = FALSE)
  )
# View cleaned sales data
sales_clean
```


#### Step 2: Clean Customer Data

```{r}
# Clean the customer data
customers_clean <- customers_raw |>
  mutate(
    # Standardize customer names to Title Case
    customer_name = str_to_title(_____),
    
    # Replace blank segments with "Unclassified"
    segment = if_else(segment == "", "_____", segment)
  )

# View cleaned customer data
customers_clean
```


### Combining the Data

#### Join Sales with Customer Information

```{r}
# Combine sales and customer data
# Use left_join to keep all sales, even if customer not found
sales_complete <- sales_clean |>
  left_join(_____, by = "_____")

# View the combined data
glimpse(sales_complete)
```


#### Check for Data Quality Issues

```{r}
# Find sales without valid customer info
problem_sales <- sales_complete |>
  filter(is.na(_____)) |>  # Check for missing customer_name
  select(transaction_id, customer_id, amount, sale_date)

problem_sales

```


### Analysis and Insights

#### Monthly Sales Summary

```{r}
# Calculate monthly sales (excluding problem transactions)
monthly_sales <- sales_complete |>
  filter(!is.na(customer_name)) |>  # Only valid customers
  group_by(_____) |>  # Group by month_name
  summarise(
    total_sales = sum(_____),
    transaction_count = n(),
    average_sale = mean(_____)
  )

# View monthly summary
monthly_sales

# Format as currency
monthly_sales |>
  mutate(
    total_sales = dollar(total_sales),
    average_sale = dollar(average_sale)
  )

```

#### Sales by Product Category

```{r}
# Analyze sales by product
product_summary <- sales_complete |>
  filter(!is.na(customer_name)) |>
  group_by(_____) |>  # Group by product_category
  summarise(
    total_sales = sum(amount),
    count = n()
  ) |>
  mutate(
    percentage = (total_sales / sum(total_sales)) * 100
  ) |>
  arrange(desc(total_sales))

# View product summary
product_summary
```

#### Customer Segment Analysis

```{r}
# Analyze by customer segment
segment_summary <- sales_complete |>
  filter(!is.na(customer_name)) |>
  group_by(_____) |>  # Group by segment
  summarise(
    total_sales = sum(amount),
    customer_count = n_distinct(_____),  # Count unique customers
    avg_per_customer = total_sales / customer_count
  )

# View segment summary with formatting
segment_summary |>
  mutate(
    total_sales = dollar(total_sales),
    avg_per_customer = dollar(avg_per_customer)
  )

```

## Key Findings
Data Quality Report

```{r}
# Calculate data quality metrics
total_transactions <- nrow(sales_complete)
valid_transactions <- sum(!is.na(sales_complete$customer_name))
problem_transactions <- sum(is.na(sales_complete$customer_name))

# Create summary
data_quality <- tibble(
  Metric = c("Total Transactions", 
            "Valid Transactions", 
            "Problem Transactions",
            "Data Quality Rate"),
  Value = c(total_transactions,
            valid_transactions,
            problem_transactions,
            percent(valid_transactions/total_transactions) )
)

data_quality

```


#### Business Insights

Based on the analysis above, complete these insights:

- **Monthly Trend**: Sales (increased/decreased) from January to March, with the highest sales in _____.
- **Product Performance**: _____ generated the most revenue, accounting for _____% of total sales.
- **Customer Segments**: The _____ segment had the highest average sale per customer at $_____.
- **Data Quality**: We identified _____ transaction(s) with invalid customer IDs that need investigation.